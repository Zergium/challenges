


Q: what's better?  + (this is better) / - (this is bad) / = (doesn't matter)

----
const int n = ...
int n = ...

----
const int n(someList.size());
const int n = someList.size();

----
const int MAX_VALUE = ...
const int max_value = ...

----
int i = std::numeric_limits<int>::max_value;
int i = MAX_INT;

----
struct Node_t { ...
struct Node { ...
struct node_t { ...

----
int numOfNodes = ...
int numNodes = ...
int numberOfNodes = ...
int number_nodes = ...

----
int distance012(const string& a, const string& b) ...
int distance012(const string& first, const string& second) ...

----
if (0 == a.size()) ...
if (a.size() == 0) ...

----
if (a.size() != b.size()) {
    return false;
}

if (a.size() != b.size()) return false;

if (a.size() != b.size()) 
{
    return false;
}

----
int num_diff_chars(0);
int numDiffChars(0);
int numDiffChars = 0;

----
return (1 == num_diff_chars);
return 1 == num_diff_chars;


----
        bool result = xRes.first == yRes.first && // same level
            xRes.second != yRes.second; // different parents
        return result;

    vs

        return xRes.first == yRes.first && // same level
            xRes.second != yRes.second; // different parents

----

            nums[curr] = 0;
            curr++;

vs

            nums[curr++] = 0;

----


        return (ps == -1 && pt == -1);

vs

        bool result = (ps == -1 && pt == -1);
        return result;

-----


Q:



